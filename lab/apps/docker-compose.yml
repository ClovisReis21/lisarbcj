version: '3'

services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    healthcheck:
      test: ['CMD', 'zkCli.sh', 'status']
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 10s
    networks:
      loja:
        ipv4_address: 172.28.0.10
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./kafka/data/zookeeper/data:/data
      - ./kafka/data/zookeeper/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
    expose:
      - '9092'
    networks:
      loja:
        ipv4_address: 172.28.0.11
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data/kafka/data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafdrop:
    image: obsidiandynamics/kafdrop
    hostname: kafdrop
    container_name: kafdrop
    ports:
      - '9020:9020'
    networks:
      loja:
        ipv4_address: 172.28.0.12
    environment:
      KAFKA_BROKERCONNECT: 'kafka:19092'
    restart: 'no'
    depends_on:
      - kafka

  nessie:
    image: projectnessie/nessie:latest
    hostname: nessie
    container_name: nessie
    ports:
      - "19120:19120"
    networks:
      loja:
        ipv4_address: 172.28.0.13
    environment:
      - QUARKUS_PROFILE=dev

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    hostname: namenode
    container_name: namenode
    ports:
      - '9870:9870'
      - '9000:9000'
    networks:
      loja:
        ipv4_address: 172.28.0.14
    environment:
      - CLUSTER_NAME=hadoopCluster
    volumes:
      - hadoop_namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    hostname: datanode
    container_name: datanode
    ports:
      - '9864:9864'
    networks:
      loja:
        ipv4_address: 172.28.0.15
    environment:
      - CLUSTER_NAME=hadoopCluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    depends_on:
      - namenode

  spark_master:
    image: bitnami/spark:3.5.1
    hostname: spark_master
    container_name: spark_master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      loja:
        ipv4_address: 172.28.0.16
    environment:
      - SPARK_MODE=master

  spark_worker_1:
    image: bitnami/spark:3.5.1
    hostname: spark_worker_1
    container_name: spark_worker_1
    networks:
      loja:
        ipv4_address: 172.28.0.17
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark_master:7077

  spark_worker_2:
    image: bitnami/spark:3.5.1
    hostname: spark_worker_2
    container_name: spark_worker_2
    networks:
      loja:
        ipv4_address: 172.28.0.18
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark_master:7077

  mysql:
    image: mysql:8.3.0
    hostname: mysql
    container_name: mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P3306', '-uroot', '-proot']
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    expose:
      - '3306'
    networks:
      loja:
        ipv4_address: 172.28.0.19
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: 'America/Sao_Paulo'
    volumes:
      - ./mysql/data:/mysql/data
      - ./mysql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
  
  loja_simulada:
    image: loja_simulada_image
    build:
      context: loja_simulada
    hostname: loja_simulada
    container_name: loja_simulada
    ports:
      - '30001:30001'
    networks:
      loja:
        ipv4_address: 172.28.0.20
    environment:
      LOJA_SIMULADA_PORTA: 30001
      DB_HOST: mysql
      DB_USER: root
      DB_PASS: root
      DB_NAME: vendas
      KAFKA_BROKERCONNECT: 'kafka:19092'
    command: npm run start
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    links:
      - mysql
      - kafka

  airflow_init:
    image: apache/airflow:2.8.1
    hostname: airflow_init
    container_name: airflow_init
    networks:
      loja:
        ipv4_address: 172.28.0.21
    environment:
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=mysql+mysqlconnector://airflow:airflow@mysql:3306/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_POOL_SIZE=3
      - AIRFLOW__DATABASE__SQL_ALCHEMY_MAX_OVERFLOW=5
      - TZ=America/Sao_Paulo
    command: ["bash", "-c", "airflow db init && airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"]
    depends_on:
      - mysql
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  airflow_webserver:
    image: apache/airflow:2.8.1
    hostname: airflow_init
    container_name: airflow_webserver
    ports:
      - "9090:9090"
    networks:
      loja:
        ipv4_address: 172.28.0.22
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=mysql+mysqlconnector://airflow:airflow@mysql:3306/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_POOL_SIZE=3
      - AIRFLOW__DATABASE__SQL_ALCHEMY_MAX_OVERFLOW=5
      - TZ=America/Sao_Paulo
    command: webserver -p 9090
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  airflow_scheduler:
    image: apache/airflow:2.8.1
    hostname: airflow_init
    container_name: airflow_scheduler
    networks:
      loja:
        ipv4_address: 172.28.0.23
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=mysql+mysqlconnector://airflow:airflow@mysql:3306/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_POOL_SIZE=3
      - AIRFLOW__DATABASE__SQL_ALCHEMY_MAX_OVERFLOW=5
      - TZ=America/Sao_Paulo
    command: scheduler
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  adminer:
    image: adminer
    hostname: airflow_init
    container_name: adminer
    ports:
      - "8081:8081"
    restart: always



volumes:
  hadoop_namenode: null
  hadoop_datanode: null
  mysql: null

networks:
  loja:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
